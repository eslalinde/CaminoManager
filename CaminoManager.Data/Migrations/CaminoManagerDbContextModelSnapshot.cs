// <auto-generated />
using System;
using CaminoManager.Data.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace CaminoManager.Data.Migrations
{
    [DbContext(typeof(CaminoManagerDbContext))]
    partial class CaminoManagerDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("CaminoManager.Data.Models.Brother", b =>
                {
                    b.Property<Guid>("PersonId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("CommunityId")
                        .HasColumnType("uuid");

                    b.HasKey("PersonId", "CommunityId");

                    b.HasIndex("CommunityId");

                    b.ToTable("Brothers", (string)null);
                });

            modelBuilder.Entity("CaminoManager.Data.Models.Community", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("ActualBrothers")
                        .HasColumnType("integer");

                    b.Property<int>("BornBrothers")
                        .HasColumnType("integer");

                    b.Property<DateTime>("BornDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid?>("CatechistTeamId")
                        .HasColumnType("uuid");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("OldCatechist")
                        .HasColumnType("text");

                    b.Property<Guid>("ParishId")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("StepWayDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid>("StepWayId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.ToTable("Communities", (string)null);
                });

            modelBuilder.Entity("CaminoManager.Data.Models.Person", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<int>("GenderId")
                        .HasColumnType("integer");

                    b.Property<string>("Mobile")
                        .HasColumnType("text");

                    b.Property<string>("PersonName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("PersonTypeId")
                        .HasColumnType("integer");

                    b.Property<string>("Phone")
                        .HasColumnType("text");

                    b.Property<Guid?>("SpouseId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("SpouseId");

                    b.ToTable("People", (string)null);
                });

            modelBuilder.Entity("CaminoManager.Data.Models.Brother", b =>
                {
                    b.HasOne("CaminoManager.Data.Models.Community", "Community")
                        .WithMany("Brothers")
                        .HasForeignKey("CommunityId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CaminoManager.Data.Models.Person", "Person")
                        .WithMany("Brothers")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Community");

                    b.Navigation("Person");
                });

            modelBuilder.Entity("CaminoManager.Data.Models.Person", b =>
                {
                    b.HasOne("CaminoManager.Data.Models.Person", "Spouse")
                        .WithMany()
                        .HasForeignKey("SpouseId");

                    b.Navigation("Spouse");
                });

            modelBuilder.Entity("CaminoManager.Data.Models.Community", b =>
                {
                    b.Navigation("Brothers");
                });

            modelBuilder.Entity("CaminoManager.Data.Models.Person", b =>
                {
                    b.Navigation("Brothers");
                });
#pragma warning restore 612, 618
        }
    }
}
